apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "llm-server.fullname" . }}
  labels:
    {{- include "llm-server.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "llm-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "llm-server.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.service.metricsPort }}"
    spec:
      serviceAccountName: {{ include "llm-server.fullname" . }}
      containers:
        - name: llm-server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["python3"]
          args: ["/app/server/server.py"]
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
            - name: metrics
              containerPort: {{ .Values.service.metricsPort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: MODEL_NAME
              value: {{ .Values.modelConfig.name }}
            - name: MODEL_VERSION
              value: {{ .Values.modelConfig.version }}
            - name: PYTHONPATH
              value: /pythonpath
          volumeMounts:
            - name: model-storage
              mountPath: /app/models
            - name: cache-storage
              mountPath: /app/cache
            - name: config
              mountPath: /app/config
            - name: server
              mountPath: /app/server
            - name: python-packages
              mountPath: /pythonpath
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
      volumes:
        - name: model-storage
          persistentVolumeClaim:
            claimName: {{ include "llm-server.fullname" . }}-models
        - name: cache-storage
          emptyDir: {}
        - name: config
          configMap:
            name: {{ include "llm-server.fullname" . }}-config
        - name: server
          configMap:
            name: {{ include "llm-server.fullname" . }}-server
        - name: python-packages
          emptyDir: {}
      initContainers:
        - name: install-prometheus-client
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["pip"]
          args: ["install", "--target=/pythonpath", "prometheus_client"]
          volumeMounts:
            - name: python-packages
              mountPath: /pythonpath